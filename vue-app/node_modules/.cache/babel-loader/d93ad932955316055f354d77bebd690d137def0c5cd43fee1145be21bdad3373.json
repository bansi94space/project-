{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"Second Largest Value: \" + _toDisplayString($data.secondLargest), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","secondLargest"],"sources":["D:\\bansi\\vuejs\\p1\\vue-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Second Largest Value: {{ secondLargest }}</h2>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      unSortedArray: [2, 1, 7, 3, 8, 9, 4, 3],\n      secondLargest: null\n    };\n  },\n  created() {\n    this.findSecondLargest();\n  },\n  methods: {\n    findSecondLargest() {\n      let firstMax = -Infinity;\n      let secondMax = -Infinity;\n      for (let i = 0; i < this.unSortedArray.length; i++) {\n        if (this.unSortedArray[i] > firstMax) {\n          secondMax = firstMax;\n          firstMax = this.unSortedArray[i];\n        } else if (this.unSortedArray[i] > secondMax && this.unSortedArray[i] !== firstMax) {\n          secondMax = this.unSortedArray[i];\n        }\n      }\n      this.secondLargest = secondMax;\n    }\n  }\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAEM,cADJC,mBAAA,CAAkD,YAA9C,wBAAsB,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,aAAa,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}